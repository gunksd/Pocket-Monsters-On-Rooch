// src/http/httpTransport.ts
import {
  RoochHTTPTransport,
  ErrorValidateInvalidAccountAuthKey,
  ErrorValidateSessionIsExpired
} from "@roochnetwork/rooch-sdk";
var HTTPTransport = class extends RoochHTTPTransport {
  constructor(options, sessionExpiredCallback) {
    super(options);
    this.sessionExpiredCallback = sessionExpiredCallback;
  }
  async request(input) {
    let result;
    try {
      result = await super.request(input);
      return result;
    } catch (e) {
      if ("code" in e && (e.code === ErrorValidateInvalidAccountAuthKey || e.code === ErrorValidateSessionIsExpired)) {
        this.sessionExpiredCallback();
      }
      throw e;
    }
  }
};
export {
  HTTPTransport
};
//# sourceMappingURL=httpTransport.js.map
