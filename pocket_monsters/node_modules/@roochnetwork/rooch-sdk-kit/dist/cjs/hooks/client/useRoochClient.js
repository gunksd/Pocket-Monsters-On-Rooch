"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/hooks/client/useRoochClient.ts
var useRoochClient_exports = {};
__export(useRoochClient_exports, {
  useRoochClient: () => useRoochClient
});
module.exports = __toCommonJS(useRoochClient_exports);

// src/hooks/client/useRoochContext.ts
var import_react9 = require("react");

// src/provider/clientProvider.tsx
var import_react7 = require("react");
var import_react8 = require("react");
var import_rooch_sdk9 = require("@roochnetwork/rooch-sdk");

// src/hooks/useSessionsStore.ts
var import_react6 = require("react");
var import_zustand4 = require("zustand");

// src/provider/roochProvider.tsx
var import_react = require("react");

// src/provider/sessionStore.ts
var import_zustand = require("zustand");
var import_middleware = require("zustand/middleware");
var import_rooch_sdk = require("@roochnetwork/rooch-sdk");

// src/wellet/wallet.ts
var import_rooch_sdk2 = require("@roochnetwork/rooch-sdk");

// src/wellet/bitcoin.ts
var import_rooch_sdk3 = require("@roochnetwork/rooch-sdk");

// src/wellet/unisat.ts
var import_rooch_sdk4 = require("@roochnetwork/rooch-sdk");

// src/wellet/okx.ts
var import_rooch_sdk5 = require("@roochnetwork/rooch-sdk");

// src/wellet/onekey.ts
var import_rooch_sdk6 = require("@roochnetwork/rooch-sdk");

// src/provider/roochProvider.tsx
var import_jsx_runtime = require("react/jsx-runtime");
var RoochContext = (0, import_react.createContext)(null);

// src/provider/walletProvider.tsx
var import_react5 = require("react");
var import_rooch_sdk7 = require("@roochnetwork/rooch-sdk");

// src/provider/walletStore.ts
var import_zustand2 = require("zustand");
var import_middleware2 = require("zustand/middleware");

// src/hooks/client/useRoochClientQuery.ts
var import_react_query = require("@tanstack/react-query");

// src/hooks/client/useSwitchNetwork.ts
var import_react_query2 = require("@tanstack/react-query");

// src/constants/roochMutationKeys.ts
function formMutationKeyFn(baseEntity) {
  return function mutationKeyFn(additionalKeys = []) {
    return [{ ...roochMutationKeys.all, baseEntity }, ...additionalKeys];
  };
}
var roochMutationKeys = {
  all: { baseScope: "rooch" },
  addNetwork: formMutationKeyFn("add-network"),
  switchNetwork: formMutationKeyFn("switch-network"),
  removeNetwork: formMutationKeyFn("remove-network"),
  removeSession: formMutationKeyFn("remove-session"),
  transferObject: formMutationKeyFn("transfer-object"),
  transferCoin: formMutationKeyFn("transfer-coin"),
  signAndExecuteTransaction: formMutationKeyFn("sign-and-execute-transaction")
};

// src/constants/walletMutationKeys.ts
function formMutationKeyFn2(baseEntity) {
  return function mutationKeyFn(additionalKeys = []) {
    return [{ ...walletMutationKeys.all, baseEntity }, ...additionalKeys];
  };
}
var walletMutationKeys = {
  all: { baseScope: "wallet" },
  connectWallet: formMutationKeyFn2("connect-wallet"),
  autoConnectWallet: formMutationKeyFn2("auto-connect-wallet"),
  switchAccount: formMutationKeyFn2("switch-account"),
  createSessionKey: formMutationKeyFn2("create-session-key")
};

// src/hooks/client/useTransferObject.ts
var import_react_query3 = require("@tanstack/react-query");

// src/hooks/client/useTransferCoin.ts
var import_react_query4 = require("@tanstack/react-query");

// src/hooks/client/useSignAndExecuteTransaction.ts
var import_react_query5 = require("@tanstack/react-query");

// src/hooks/wallet/useWalletStore.ts
var import_react2 = require("react");
var import_zustand3 = require("zustand");

// src/hooks/wallet/useAutoConnectWallet.ts
var import_react_query6 = require("@tanstack/react-query");
var import_react3 = require("react");

// src/hooks/wallet/useConnectWallet.ts
var import_react_query7 = require("@tanstack/react-query");

// src/hooks/wallet/useWalletCreateSession.ts
var import_react_query8 = require("@tanstack/react-query");

// src/hooks/wallet/useWalletChanged.ts
var import_react4 = require("react");

// src/hooks/useRemoveSession.ts
var import_react_query9 = require("@tanstack/react-query");

// src/provider/walletProvider.tsx
var import_jsx_runtime2 = require("react/jsx-runtime");
var WalletContext = (0, import_react5.createContext)(null);

// src/http/httpTransport.ts
var import_rooch_sdk8 = require("@roochnetwork/rooch-sdk");

// src/provider/clientProvider.tsx
var import_jsx_runtime3 = require("react/jsx-runtime");
var ClientContext = (0, import_react8.createContext)(null);
var DEFAULT_NETWORKS = {
  localnet: { url: (0, import_rooch_sdk9.getRoochNodeUrl)("localnet") }
};

// src/hooks/client/useRoochContext.ts
function useRoochContext() {
  const context = (0, import_react9.useContext)(ClientContext);
  if (!context) {
    throw new Error(
      "Could not find RoochClientContext. Ensure that you have set up the RoochClientProvider."
    );
  }
  return context;
}

// src/hooks/client/useRoochClient.ts
function useRoochClient() {
  return useRoochContext().client;
}
//# sourceMappingURL=useRoochClient.js.map
