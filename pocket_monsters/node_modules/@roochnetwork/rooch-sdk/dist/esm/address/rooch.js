import { bech32m } from "@scure/base";
import { fromHEX, isHex, toHEX } from "../utils/index.js";
import { normalizeRoochAddress } from "./util.js";
import { ROOCH_BECH32_PREFIX } from "./address.js";
class RoochAddress {
  constructor(address) {
    if (typeof address === "string") {
      if (isHex(address)) {
        this.address = fromHEX(address);
      } else {
        this.address = bech32m.fromWords(bech32m.decode(address).words);
      }
    } else {
      this.address = address;
    }
  }
  toStr() {
    return this.toBech32Address();
  }
  toBytes() {
    return this.address;
  }
  toHexAddress() {
    return normalizeRoochAddress(toHEX(this.address));
  }
  toBech32Address() {
    return bech32m.encode(ROOCH_BECH32_PREFIX, bech32m.toWords(this.address));
  }
}
export {
  RoochAddress
};
//# sourceMappingURL=rooch.js.map
