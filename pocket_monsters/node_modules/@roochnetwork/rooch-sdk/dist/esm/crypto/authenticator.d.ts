import { Bytes } from '../types/index.js';
import { Signer } from './signer.js';
export declare class BitcoinSignMessage {
    readonly messagePrefix: string;
    readonly messageInfo: string;
    readonly txHash: Bytes;
    constructor(txData: Bytes, messageInfo: string);
    raw(): string;
    encode(): Bytes;
    hash(): Bytes;
}
export declare enum BuiltinAuthValidator {
    ROOCH = 0,
    BITCOIN = 1
}
export declare class Authenticator {
    readonly authValidatorId: number;
    readonly payload: Bytes;
    private constructor();
    encode(): Bytes;
    static rooch(input: Bytes, signer: Signer): Promise<Authenticator>;
    static bitcoin(input: BitcoinSignMessage, signer: Signer, signWith?: 'hash' | 'raw'): Promise<Authenticator>;
}
