export type HttpHeaders = {
    [header: string]: string;
};
export interface RoochHTTPTransportOptions {
    fetch?: typeof fetch;
    url: string;
    rpc?: {
        headers?: HttpHeaders;
        url?: string;
    };
}
export interface RoochTransportRequestOptions {
    method: string;
    params: unknown[];
}
export interface RoochTransport {
    request<T = unknown>(input: RoochTransportRequestOptions): Promise<T>;
}
export declare class RoochHTTPTransport implements RoochTransport {
    #private;
    constructor(options: RoochHTTPTransportOptions);
    fetch(input: RequestInfo, init?: RequestInit): Promise<Response>;
    request<T>(input: RoochTransportRequestOptions): Promise<T>;
}
