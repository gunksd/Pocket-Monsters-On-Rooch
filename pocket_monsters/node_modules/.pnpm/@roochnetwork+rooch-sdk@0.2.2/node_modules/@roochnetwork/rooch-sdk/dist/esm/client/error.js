const ErrorValidateSequenceNuberTooOld = 1001;
const ErrorValidateSequenceNumberTooNew = 1002;
const ErrorValidateAccountDoesNotExist = 1003;
const ErrorValidateCantPayGasDeposit = 1004;
const ErrorValidateTransactionExpired = 1005;
const ErrorValidateBadChainId = 1006;
const ErrorValidateSequenceNumberTooBig = 1007;
const ErrorValidateMaxGasAmountExceeded = 1008;
const ErrorValidateInvalidAccountAuthKey = 1009;
const ErrorValidateInvalidAuthenticator = 1010;
const ErrorValidateNotInstalledAuthValidator = 1011;
const ErrorValidateSessionIsExpired = 1012;
const ErrorValidateFunctionCallBeyondSessionScope = 1013;
const CODE_TO_ERROR_TYPE = {
  1001: "SequenceNuberTooOld",
  1002: "SequenceNuberTooNew",
  1003: "AccountDoesNotExist",
  1004: "CantPayGasDeposit",
  1005: "TransactionExpired",
  1006: "BadChainId",
  1007: "SequenceNumberTooBig",
  1008: "MaxGasAmountExceeded",
  1009: "InvalidAccountAuthKey",
  1010: "InvalidAuthenticator",
  1011: "NotInstalledAuthValidator",
  1012: "SessionIsExpired",
  1013: "CallFunctionBeyondSessionScop"
};
class RoochHTTPTransportError extends Error {
}
class JsonRpcError extends RoochHTTPTransportError {
  constructor(message, code) {
    super(message);
    const parse = this.parseSubStatus();
    this.code = parse || code;
    this.type = CODE_TO_ERROR_TYPE[this.code] ?? "ServerError";
  }
  // Parse rooch RPC error sub status from `status ABORTED of type Execution with sub status 66537`
  parse() {
  }
  parseSubStatus() {
    const regex = /sub status (\d+)/;
    const match = this.message.match(regex);
    const code = match ? parseInt(match[1]) : null;
    return code ? code & 65535 : null;
  }
}
class RoochHTTPStatusError extends RoochHTTPTransportError {
  constructor(message, status, statusText) {
    super(message);
    this.status = status;
    this.statusText = statusText;
  }
}
export {
  ErrorValidateAccountDoesNotExist,
  ErrorValidateBadChainId,
  ErrorValidateCantPayGasDeposit,
  ErrorValidateFunctionCallBeyondSessionScope,
  ErrorValidateInvalidAccountAuthKey,
  ErrorValidateInvalidAuthenticator,
  ErrorValidateMaxGasAmountExceeded,
  ErrorValidateNotInstalledAuthValidator,
  ErrorValidateSequenceNuberTooOld,
  ErrorValidateSequenceNumberTooBig,
  ErrorValidateSequenceNumberTooNew,
  ErrorValidateSessionIsExpired,
  ErrorValidateTransactionExpired,
  JsonRpcError,
  RoochHTTPStatusError,
  RoochHTTPTransportError
};
//# sourceMappingURL=error.js.map
