import { Bytes } from '../types/index.js';
import { Address } from './address.js';
import { RoochAddress } from './rooch.js';
import { ThirdPartyAddress } from './thirdparty-address.js';
declare enum BitcoinAddressType {
    pkh = 0,
    sh = 1,
    wpkh = 2,
    wsh = 2,
    tr = 2
}
export declare class BitcoinAddress extends ThirdPartyAddress implements Address {
    private readonly bytes;
    private roochAddress;
    constructor(input: string);
    toBytes(): Bytes;
    genMultiChainAddress(): Bytes;
    genRoochAddress(): RoochAddress;
    decode(): {
        bytes: Uint8Array;
        type: BitcoinAddressType;
        version: number;
    } | {
        bytes: Uint8Array;
        type: BitcoinAddressType;
        version?: undefined;
    };
    private wrapAddress;
}
export {};
