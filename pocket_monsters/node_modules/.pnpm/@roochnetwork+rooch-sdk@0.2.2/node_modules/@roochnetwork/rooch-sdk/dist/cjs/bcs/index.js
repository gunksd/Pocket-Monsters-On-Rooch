"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var bcs_exports = {};
__export(bcs_exports, {
  Args: () => import_args.Args,
  BcsType: () => import_bcs3.BcsType,
  RoochBcs: () => RoochBcs,
  Serializer: () => import_serializer.Serializer,
  bcs: () => RoochBcs
});
module.exports = __toCommonJS(bcs_exports);
var import_bcs = require("@mysten/bcs");
var import_bcs2 = require("./bcs.js");
var import_bcs3 = require("@mysten/bcs");
var import_args = require("./args.js");
var import_serializer = require("./serializer.js");
var import_types = require("./types.js");
const RoochBcs = {
  U8: import_bcs.bcs.u8(),
  U16: import_bcs.bcs.u16(),
  U32: import_bcs.bcs.u32(),
  U64: import_bcs.bcs.u64(),
  U128: import_bcs.bcs.u128(),
  U256: import_bcs.bcs.u256(),
  Bool: import_bcs.bcs.bool(),
  Raw: import_bcs2.raw,
  String: import_bcs.bcs.string(),
  Address: import_bcs2.Address,
  MultiChainAddress: import_bcs2.MultiChainAddress,
  ObjectId: import_bcs2.ObjectId,
  BitcoinAuthPayload: import_bcs2.BitcoinAuthPayload,
  ModuleId: import_bcs2.ModuleId,
  FunctionId: import_bcs2.FunctionId,
  ScriptCall: import_bcs2.ScriptCall,
  CallFunction: import_bcs2.CallFunction,
  MoveAction: import_bcs2.MoveAction,
  RoochTransactionData: import_bcs2.RoochTransactionData,
  Authenticator: import_bcs2.Authenticator,
  RoochTransaction: import_bcs2.RoochTransaction,
  ...import_bcs.bcs
};
//# sourceMappingURL=index.js.map
