"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var rooch_exports = {};
__export(rooch_exports, {
  RoochAddress: () => RoochAddress
});
module.exports = __toCommonJS(rooch_exports);
var import_base = require("@scure/base");
var import_utils = require("../utils/index.js");
var import_util = require("./util.js");
var import_address = require("./address.js");
class RoochAddress {
  constructor(address) {
    if (typeof address === "string") {
      if ((0, import_utils.isHex)(address)) {
        this.address = (0, import_utils.fromHEX)(address);
      } else {
        this.address = import_base.bech32m.fromWords(import_base.bech32m.decode(address).words);
      }
    } else {
      this.address = address;
    }
  }
  toStr() {
    return this.toBech32Address();
  }
  toBytes() {
    return this.address;
  }
  toHexAddress() {
    return (0, import_util.normalizeRoochAddress)((0, import_utils.toHEX)(this.address));
  }
  toBech32Address() {
    return import_base.bech32m.encode(import_address.ROOCH_BECH32_PREFIX, import_base.bech32m.toWords(this.address));
  }
}
//# sourceMappingURL=rooch.js.map
