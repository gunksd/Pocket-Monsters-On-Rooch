import { Authenticator } from '../crypto/index.js';
import { address, Bytes, u64 } from '../types/index.js';
import { CallFunctionArgs } from './types.js';
export declare class Transaction {
    private data;
    private auth;
    private info;
    callFunction(input: {
        info?: string;
    } & CallFunctionArgs): void;
    getInfo(): string | undefined;
    setSender(input: address): void;
    setAuth(input: Authenticator): void;
    setChainId(input: u64): void;
    setSeqNumber(input: u64): void;
    hashData(): Bytes;
    encode(): import("@mysten/bcs").SerializedBcs<{
        data: number[];
        auth: number[];
    }, {
        data: Iterable<number> & {
            length: number;
        };
        auth: Iterable<number> & {
            length: number;
        };
    }>;
    private getData;
    private isValid;
}
