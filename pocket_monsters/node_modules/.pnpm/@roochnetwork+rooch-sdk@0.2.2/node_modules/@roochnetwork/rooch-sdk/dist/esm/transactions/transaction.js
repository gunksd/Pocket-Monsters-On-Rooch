import { bcs } from "../bcs/index.js";
import { MoveAction, TransactionData } from "./transactionData.js";
class Transaction {
  callFunction(input) {
    this.info = input.info;
    this.data = new TransactionData(MoveAction.newCallFunction(input));
  }
  getInfo() {
    return this.info;
  }
  setSender(input) {
    this.getData().sender = input;
  }
  setAuth(input) {
    this.auth = input;
  }
  setChainId(input) {
    this.getData().chainId = input;
  }
  setSeqNumber(input) {
    this.getData().sequenceNumber = input;
  }
  hashData() {
    return this.getData().hash();
  }
  encode() {
    return bcs.RoochTransaction.serialize({
      data: this.data.encode(),
      auth: this.auth.encode()
    });
  }
  getData() {
    this.isValid();
    return this.data;
  }
  isValid() {
    if (!this.data) {
      throw new Error("Transaction data is not initialized. Call action first.");
    }
  }
}
export {
  Transaction
};
//# sourceMappingURL=transaction.js.map
