{
  "version": 3,
  "sources": ["../../../src/transactions/transactionData.ts"],
  "sourcesContent": ["// Copyright (c) RoochNetwork\n// SPDX-License-Identifier: Apache-2.0\n\nimport { sha3_256 } from '../utils/index.js'\nimport { normalizeRoochAddress } from '../address/index.js'\nimport { Args, bcs, Serializer } from '../bcs/index.js'\nimport { address, Bytes, identifier, u8, u64 } from '../types/index.js'\nimport { CallFunctionArgs, CallScript } from './types.js'\n\nconst DEFAULT_GAS = BigInt(50000000)\n\nexport class CallFunction {\n  address: string\n  module: identifier\n  function: identifier\n  args: Args[]\n  typeArgs: string[]\n\n  constructor(input: CallFunctionArgs) {\n    const [pkg, mod, fn] =\n      'target' in input ? input.target.split('::') : [input.address, input.module, input.function]\n\n    this.address = pkg\n    this.module = mod\n    this.function = fn\n\n    this.args = input.args || []\n    this.typeArgs = input.typeArgs?.map((item) => Serializer.typeTagToString(item)) || []\n  }\n\n  functionId(): string {\n    return `${normalizeRoochAddress(this.address)}::${this.module}::${this.function}`\n  }\n\n  encodeArgs(): string[] {\n    return this.args?.map((item) => item.encodeWithHex())\n  }\n\n  encodeArgsWithUtf8(): string {\n    return ''\n  }\n\n  encodeArgsToByteArrays(): u8[][] {\n    return this.args.map((item) => item.encode()).map((item) => Array.from(item))\n  }\n}\n\ntype MoveActionType = CallFunction | CallScript\n\nexport class MoveAction {\n  scheme: number\n  val: MoveActionType\n\n  private constructor(scheme: number, val: MoveActionType) {\n    this.scheme = scheme\n    this.val = val\n  }\n\n  static newCallFunction(input: CallFunctionArgs) {\n    return new MoveAction(1, new CallFunction(input))\n  }\n\n  static newCallScript(input: CallScript) {\n    return new MoveAction(2, input)\n  }\n}\n\nexport class TransactionData {\n  sender?: address\n  sequenceNumber?: u64\n  chainId?: u64\n  maxGas: u64\n  action: MoveAction\n\n  constructor(\n    action: MoveAction,\n    sender?: string,\n    sequenceNumber?: bigint,\n    chainId?: bigint,\n    maxGas?: bigint,\n  ) {\n    this.sender = sender\n    this.sequenceNumber = sequenceNumber\n    this.chainId = chainId\n    this.action = action\n    this.maxGas = maxGas || DEFAULT_GAS\n  }\n\n  encode(): Bytes {\n    const call = this.action.val as CallFunction\n\n    return bcs.RoochTransactionData.serialize({\n      sender: this.sender!,\n      sequenceNumber: this.sequenceNumber!,\n      chainId: this.chainId!,\n      maxGas: this.maxGas,\n      action: {\n        kind: 'CallFunction',\n        functionId: {\n          moduleId: {\n            address: call.address,\n            name: call.module,\n          },\n          name: call.function,\n        },\n        args: Array.from(call.encodeArgsToByteArrays()),\n        typeArgs: call.typeArgs,\n      },\n    }).toBytes()\n  }\n\n  hash(): Bytes {\n    return sha3_256(this.encode())\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,mBAAyB;AACzB,qBAAsC;AACtC,iBAAsC;AAItC,MAAM,cAAc,OAAO,GAAQ;AAE5B,MAAM,aAAa;AAAA,EAOxB,YAAY,OAAyB;AACnC,UAAM,CAAC,KAAK,KAAK,EAAE,IACjB,YAAY,QAAQ,MAAM,OAAO,MAAM,IAAI,IAAI,CAAC,MAAM,SAAS,MAAM,QAAQ,MAAM,QAAQ;AAE7F,SAAK,UAAU;AACf,SAAK,SAAS;AACd,SAAK,WAAW;AAEhB,SAAK,OAAO,MAAM,QAAQ,CAAC;AAC3B,SAAK,WAAW,MAAM,UAAU,IAAI,CAAC,SAAS,sBAAW,gBAAgB,IAAI,CAAC,KAAK,CAAC;AAAA,EACtF;AAAA,EAEA,aAAqB;AACnB,WAAO,OAAG,sCAAsB,KAAK,OAAO,MAAM,KAAK,WAAW,KAAK;AAAA,EACzE;AAAA,EAEA,aAAuB;AACrB,WAAO,KAAK,MAAM,IAAI,CAAC,SAAS,KAAK,cAAc,CAAC;AAAA,EACtD;AAAA,EAEA,qBAA6B;AAC3B,WAAO;AAAA,EACT;AAAA,EAEA,yBAAiC;AAC/B,WAAO,KAAK,KAAK,IAAI,CAAC,SAAS,KAAK,OAAO,CAAC,EAAE,IAAI,CAAC,SAAS,MAAM,KAAK,IAAI,CAAC;AAAA,EAC9E;AACF;AAIO,MAAM,WAAW;AAAA,EAId,YAAY,QAAgB,KAAqB;AACvD,SAAK,SAAS;AACd,SAAK,MAAM;AAAA,EACb;AAAA,EAEA,OAAO,gBAAgB,OAAyB;AAC9C,WAAO,IAAI,WAAW,GAAG,IAAI,aAAa,KAAK,CAAC;AAAA,EAClD;AAAA,EAEA,OAAO,cAAc,OAAmB;AACtC,WAAO,IAAI,WAAW,GAAG,KAAK;AAAA,EAChC;AACF;AAEO,MAAM,gBAAgB;AAAA,EAO3B,YACE,QACA,QACA,gBACA,SACA,QACA;AACA,SAAK,SAAS;AACd,SAAK,iBAAiB;AACtB,SAAK,UAAU;AACf,SAAK,SAAS;AACd,SAAK,SAAS,UAAU;AAAA,EAC1B;AAAA,EAEA,SAAgB;AACd,UAAM,OAAO,KAAK,OAAO;AAEzB,WAAO,eAAI,qBAAqB,UAAU;AAAA,MACxC,QAAQ,KAAK;AAAA,MACb,gBAAgB,KAAK;AAAA,MACrB,SAAS,KAAK;AAAA,MACd,QAAQ,KAAK;AAAA,MACb,QAAQ;AAAA,QACN,MAAM;AAAA,QACN,YAAY;AAAA,UACV,UAAU;AAAA,YACR,SAAS,KAAK;AAAA,YACd,MAAM,KAAK;AAAA,UACb;AAAA,UACA,MAAM,KAAK;AAAA,QACb;AAAA,QACA,MAAM,MAAM,KAAK,KAAK,uBAAuB,CAAC;AAAA,QAC9C,UAAU,KAAK;AAAA,MACjB;AAAA,IACF,CAAC,EAAE,QAAQ;AAAA,EACb;AAAA,EAEA,OAAc;AACZ,eAAO,uBAAS,KAAK,OAAO,CAAC;AAAA,EAC/B;AACF;",
  "names": []
}
