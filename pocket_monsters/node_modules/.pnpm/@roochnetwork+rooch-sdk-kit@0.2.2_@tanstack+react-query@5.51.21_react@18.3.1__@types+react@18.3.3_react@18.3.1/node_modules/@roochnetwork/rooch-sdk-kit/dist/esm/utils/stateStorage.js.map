{
  "version": 3,
  "sources": ["../../../src/utils/stateStorage.ts"],
  "sourcesContent": ["// Copyright (c) RoochNetwork\n// SPDX-License-Identifier: Apache-2.0\n\nimport type { StateStorage } from 'zustand/middleware'\n\nexport function createInMemoryStore(): StateStorage {\n  const store = new Map()\n  return {\n    getItem(key: string) {\n      return store.get(key)\n    },\n    setItem(key: string, value: string) {\n      store.set(key, value)\n    },\n    removeItem(key: string) {\n      store.delete(key)\n    },\n  }\n}\n\nexport enum StorageType {\n  Session,\n  Local,\n}\n\nexport function getDefaultStorage(type?: StorageType): StateStorage {\n  let storage: StateStorage | undefined\n\n  switch (type) {\n    case StorageType.Session:\n      storage = typeof window !== 'undefined' && window.sessionStorage ? sessionStorage : undefined\n      break\n    case StorageType.Local:\n      storage = typeof window !== 'undefined' && window.localStorage ? localStorage : undefined\n  }\n\n  if (!storage) {\n    storage = createInMemoryStore()\n  }\n\n  return storage\n}\n"],
  "mappings": ";AAKO,SAAS,sBAAoC;AAClD,QAAM,QAAQ,oBAAI,IAAI;AACtB,SAAO;AAAA,IACL,QAAQ,KAAa;AACnB,aAAO,MAAM,IAAI,GAAG;AAAA,IACtB;AAAA,IACA,QAAQ,KAAa,OAAe;AAClC,YAAM,IAAI,KAAK,KAAK;AAAA,IACtB;AAAA,IACA,WAAW,KAAa;AACtB,YAAM,OAAO,GAAG;AAAA,IAClB;AAAA,EACF;AACF;AAEO,IAAK,cAAL,kBAAKA,iBAAL;AACL,EAAAA,0BAAA;AACA,EAAAA,0BAAA;AAFU,SAAAA;AAAA,GAAA;AAKL,SAAS,kBAAkB,MAAkC;AAClE,MAAI;AAEJ,UAAQ,MAAM;AAAA,IACZ,KAAK;AACH,gBAAU,OAAO,WAAW,eAAe,OAAO,iBAAiB,iBAAiB;AACpF;AAAA,IACF,KAAK;AACH,gBAAU,OAAO,WAAW,eAAe,OAAO,eAAe,eAAe;AAAA,EACpF;AAEA,MAAI,CAAC,SAAS;AACZ,cAAU,oBAAoB;AAAA,EAChC;AAEA,SAAO;AACT;",
  "names": ["StorageType"]
}
